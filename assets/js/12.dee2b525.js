(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{285:function(t,s,a){"use strict";a.r(s);var e=a(10),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"类型编码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#类型编码"}},[t._v("#")]),t._v(" 类型编码")]),t._v(" "),s("p",[t._v("为了帮助运行时系统，编译器将每个方法的返回类型和参数类型编码为字符串，并将字符串与方法选择器关联起来。它使用的编码方案在其他上下文中也很有用，因此可以通过 "),s("code",[t._v("@encode()")]),t._v(" 编译器指令公开使用。当给定类型规范时，"),s("code",[t._v("@encode()")]),t._v(" 返回对该类型进行编码的字符串。类型可以是基本类型，例如 "),s("code",[t._v("int")]),t._v("、指针、带标记的结构或联合，或者类名——事实上，任何类型都可以用作 C "),s("code",[t._v("sizeof()")]),t._v(" 操作符的实参。")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buf1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buf2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("key")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("buf3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" @"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Rectangle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("下表列出了类型代码。请注意，其中许多代码与您为归档或分发目的而对对象进行编码时使用的代码重叠。然而，这里列出的一些代码在编写编码器时不能使用，还有一些代码在编写编码器时可能希望使用，但这些代码不是由 "),s("code",[t._v("@encode()")]),t._v(" 生成的。(请参阅基础框架参考中的 "),s("code",[t._v("NSCoder")]),t._v(" 类规范以获得更多关于为存档或分发编码对象的信息。)")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Code")]),t._v(" "),s("th",[t._v("Meaning")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("c")]),t._v(" "),s("td",[t._v("A char")])]),t._v(" "),s("tr",[s("td",[t._v("i")]),t._v(" "),s("td",[t._v("An int")])]),t._v(" "),s("tr",[s("td",[t._v("s")]),t._v(" "),s("td",[t._v("A short")])]),t._v(" "),s("tr",[s("td",[t._v("l")]),t._v(" "),s("td",[t._v("A long")])]),t._v(" "),s("tr",[s("td",[t._v("q")]),t._v(" "),s("td",[t._v("A long long")])]),t._v(" "),s("tr",[s("td",[t._v("c")]),t._v(" "),s("td",[t._v("An unsigned char")])]),t._v(" "),s("tr",[s("td",[t._v("I")]),t._v(" "),s("td",[t._v("An unsigned int")])]),t._v(" "),s("tr",[s("td",[t._v("S")]),t._v(" "),s("td",[t._v("An unsigned short")])]),t._v(" "),s("tr",[s("td",[t._v("L")]),t._v(" "),s("td",[t._v("An unsigned long")])]),t._v(" "),s("tr",[s("td",[t._v("Q")]),t._v(" "),s("td",[t._v("An unsigned long long")])]),t._v(" "),s("tr",[s("td",[t._v("f")]),t._v(" "),s("td",[t._v("A float")])]),t._v(" "),s("tr",[s("td",[t._v("d")]),t._v(" "),s("td",[t._v("A double")])]),t._v(" "),s("tr",[s("td",[t._v("B")]),t._v(" "),s("td",[t._v("A C++ bool or a C99 _Bool")])]),t._v(" "),s("tr",[s("td",[t._v("v")]),t._v(" "),s("td",[t._v("A void")])]),t._v(" "),s("tr",[s("td",[t._v("*")]),t._v(" "),s("td",[t._v("A character string (char *)")])]),t._v(" "),s("tr",[s("td",[t._v("@")]),t._v(" "),s("td",[t._v("An object (whether statically typed or typed id)")])]),t._v(" "),s("tr",[s("td",[t._v("#")]),t._v(" "),s("td",[t._v("A class object (Class)")])]),t._v(" "),s("tr",[s("td",[t._v(":")]),t._v(" "),s("td",[t._v("A method selector (SEL)")])]),t._v(" "),s("tr",[s("td",[t._v("[arrar type]")]),t._v(" "),s("td",[t._v("An array")])]),t._v(" "),s("tr",[s("td",[t._v("{name=type...}")]),t._v(" "),s("td",[t._v("A structure")])]),t._v(" "),s("tr",[s("td",[t._v("(name=type...)")]),t._v(" "),s("td",[t._v("A union")])]),t._v(" "),s("tr",[s("td",[t._v("bnum")]),t._v(" "),s("td",[t._v("A bit field of num bits")])]),t._v(" "),s("tr",[s("td",[t._v("^type")]),t._v(" "),s("td",[t._v("A pointer to type")])]),t._v(" "),s("tr",[s("td",[t._v("?")]),t._v(" "),s("td",[t._v("An unknown type (among other things, this code is used for function pointers)")])])])]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[s("code",[t._v("Objective-C")]),t._v(" 不支持 "),s("code",[t._v("long double")]),t._v(" 类型。"),s("code",[t._v("@encode(long double)")]),t._v("返回 "),s("code",[t._v("d")]),t._v("，与 "),s("code",[t._v("double")]),t._v(" 的编码方式相同。")])]),t._v(" "),s("p",[t._v("数组的类型代码被括在方括号内;数组中的元素数目是紧接在左括号之后、数组类型之前指定的。例如，一个包含 12 个浮点数指针的数组将被编码为:")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("f"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("结构体在大括号中指定，联合体在圆括号中指定。首先列出结构标记，然后是一个等号和按顺序列出的结构字段的代码。例如，结构体")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typedef")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" example "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id   anObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("char")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("aString"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v("  anInt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" Example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("将被编码成这样:")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("无论将定义的类型名称("),s("code",[t._v("Example")]),t._v(")还是结构标记("),s("code",[t._v("example")]),t._v(")传递给 "),s("code",[t._v("@encode()")]),t._v("，编码结果都是一样的。结构指针的编码携带了相同数量的关于结构字段的信息:")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("@")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("然而，另一个间接层删除了内部类型规范:")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("example"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("对象被当作结构来对待。例如，将 "),s("code",[t._v("NSObject")]),t._v(" 类名传递给 "),s("code",[t._v("@encode()")]),t._v(" 会产生以下编码:")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("NSObject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("#"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("code",[t._v("NSObject")]),t._v(" 类只声明了一个 "),s("code",[t._v("class")]),t._v(" 类型的实例变量 "),s("code",[t._v("isa")]),t._v(" 。")]),t._v(" "),s("p",[t._v("请注意，尽管 "),s("code",[t._v("@encode()")]),t._v(" 指令不返回它们，但当类型限定符用于在协议中声明方法时，运行时系统会使用表 6-2 中列出的额外编码。")]),t._v(" "),s("p",[t._v("表 6-2")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Code")]),t._v(" "),s("th",[t._v("Meaning")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("r")]),t._v(" "),s("td",[t._v("const")])]),t._v(" "),s("tr",[s("td",[t._v("n")]),t._v(" "),s("td",[t._v("in")])]),t._v(" "),s("tr",[s("td",[t._v("N")]),t._v(" "),s("td",[t._v("inout")])]),t._v(" "),s("tr",[s("td",[t._v("o")]),t._v(" "),s("td",[t._v("out")])]),t._v(" "),s("tr",[s("td",[t._v("O")]),t._v(" "),s("td",[t._v("bycopy")])]),t._v(" "),s("tr",[s("td",[t._v("R")]),t._v(" "),s("td",[t._v("byref")])]),t._v(" "),s("tr",[s("td",[t._v("V")]),t._v(" "),s("td",[t._v("oneway")])])])]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("引用: "),s("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtTypeEncodings.html#//apple_ref/doc/uid/TP40008048-CH100-SW1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Type Encodings"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=n.exports}}]);