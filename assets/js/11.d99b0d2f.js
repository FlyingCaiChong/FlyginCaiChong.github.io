(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{283:function(t,e,s){"use strict";s.r(e);var a=s(10),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"动态方法解析"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态方法解析"}},[t._v("#")]),t._v(" 动态方法解析")]),t._v(" "),e("p",[t._v("本章描述了如何动态地提供一个方法的实现。")]),t._v(" "),e("h2",{attrs:{id:"动态方法解析-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态方法解析-2"}},[t._v("#")]),t._v(" 动态方法解析")]),t._v(" "),e("p",[t._v("在某些情况下，您可能希望动态地提供方法的实现。例如，"),e("code",[t._v("Objective-C")]),t._v(" 声明的属性特性(参见 "),e("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjectiveC/Introduction/introObjectiveC.html#//apple_ref/doc/uid/TP30001163",target:"_blank",rel:"noopener noreferrer"}},[t._v("Objective-C 编程语言"),e("OutboundLink")],1),t._v("中的"),e("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjectiveC/Chapters/ocProperties.html#//apple_ref/doc/uid/TP30001163-CH17",target:"_blank",rel:"noopener noreferrer"}},[t._v("声明属性"),e("OutboundLink")],1),t._v(")包括 "),e("code",[t._v("@dynamic")]),t._v(" 指令:")]),t._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@dynamic")]),t._v(" propertyName"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("它告诉编译器，与该属性相关联的方法将被动态提供。")]),t._v(" "),e("p",[t._v("您可以实现方法 "),e("code",[t._v("resolveInstanceMethod:")]),t._v(" 和 "),e("code",[t._v("resolveClassMethod:")]),t._v(" 来分别为实例和类方法动态地提供给定选择器的实现。")]),t._v(" "),e("p",[e("code",[t._v("Objective-C")]),t._v(" 方法只是一个 "),e("code",[t._v("C")]),t._v(" 函数，它至少有两个参数- "),e("code",[t._v("self")]),t._v(" 和 "),e("code",[t._v("_cmd")]),t._v("。可以使用函数 "),e("code",[t._v("class_addMethod")]),t._v(" 将函数作为方法添加到类中。因此，给定如下函数:")]),t._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("dynamicMethodIMP")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" SEL _cmd"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// implementation ....")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[t._v("你可以使用 "),e("code",[t._v("resolveInstanceMethod:")]),t._v(" 动态地将它作为一个方法(称为 "),e("code",[t._v("resolveThisMethodDynamically")]),t._v(" )添加到一个类中，就像这样:")]),t._v(" "),e("div",{staticClass:"language-objc line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-objc"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@implementation")]),t._v(" MyClass\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BOOL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("resolveInstanceMethod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("SEL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("aSEL\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("aSEL "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("resolveThisMethodDynamically"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("class_addMethod")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" class"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" aSEL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("IMP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" dynamicMethodIMP"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"v@:"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" YES"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("super")]),t._v(" resolveInstanceMethod"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("aSEL"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[t._v("转发方法(如"),e("RouterLink",{attrs:{to:"/iOS/Objective-C/runtime_forward.html"}},[t._v("消息转发")]),t._v("中所述)和动态方法解析在很大程度上是正交的。类有机会在转发机制生效之前动态解析方法。如果调用 "),e("code",[t._v("respondsToSelector:")]),t._v(" 或 "),e("code",[t._v("instancesRespondToSelector:")]),t._v("，动态方法解析器将有机会首先为选择器提供一个 "),e("code",[t._v("IMP")]),t._v("。如果您实现了 "),e("code",[t._v("resolveInstanceMethod:")]),t._v(" 但希望特定的选择器通过转发机制实际转发，那么您将对这些选择器返回 "),e("code",[t._v("NO")]),t._v("。")],1),t._v(" "),e("h2",{attrs:{id:"动态加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#动态加载"}},[t._v("#")]),t._v(" 动态加载")]),t._v(" "),e("p",[e("code",[t._v("Objective-C")]),t._v(" 程序可以在运行时加载和链接新的类和类别。新代码被合并到程序中，并与开始时加载的类和类别一样对待。")]),t._v(" "),e("p",[t._v("动态加载可以用来做很多不同的事情。例如，系统首选项应用程序中的各个模块是动态加载的。")]),t._v(" "),e("p",[t._v("在 "),e("code",[t._v("Cocoa")]),t._v(" 环境中，动态加载通常用于定制应用程序。其他人可以编写你的程序在运行时加载的模块——就像 "),e("code",[t._v("Interface Builder")]),t._v(" 加载自定义面板和 "),e("code",[t._v("OS X")]),t._v(" 系统首选项应用程序加载自定义首选项模块一样。可加载模块扩展了应用程序的功能。他们以你允许但你无法预期或定义你自己的方式为它做出贡献。您提供框架，其他人提供代码。")]),t._v(" "),e("p",[t._v("虽然有一个运行时函数在 "),e("code",[t._v("Mach-O")]),t._v(" 文件中执行动态加载 "),e("code",[t._v("Objective-C")]),t._v(" 模块("),e("code",[t._v("objc_loadModules")]),t._v("，定义在 "),e("code",[t._v("objc/objc-load.h")]),t._v(")， "),e("code",[t._v("Cocoa")]),t._v(" 的 "),e("code",[t._v("NSBundle")]),t._v(" 类为动态加载提供了一个明显更方便的接口——一个面向对象的和与相关服务集成的接口。关于 "),e("code",[t._v("NSBundle")]),t._v(" 类及其使用的信息，请参阅基础框架参考中的 "),e("code",[t._v("NSBundle")]),t._v(" 类规范。有关 "),e("code",[t._v("Mach-O")]),t._v(" 文件的信息，请参阅 "),e("code",[t._v("OS X ABI Mach-O")]),t._v(" 文件格式参考。")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("引用: "),e("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/ObjCRuntimeGuide/Articles/ocrtDynamicResolution.html#//apple_ref/doc/uid/TP40008048-CH102-SW1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Dynamic Method Resolution"),e("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);