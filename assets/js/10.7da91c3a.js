(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{295:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"run-loops"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-loops"}},[t._v("#")]),t._v(" Run Loops")]),t._v(" "),s("p",[t._v("运行循环是与线程相关的基础架构的一部分。运行循环是一个事件处理循环，您使用它来安排工作和协调传入事件的接收。运行循环的目的是让你的线程在有工作要做的时候保持忙碌，在没有工作的时候让你的线程进入睡眠状态。")]),t._v(" "),s("p",[t._v("运行循环管理不是完全自动的。您仍然必须设计线程的代码，以便在适当的时间启动运行循环，并响应传入的事件。"),s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 都提供了 "),s("code",[t._v("run loop")]),t._v(" 对象来帮助您配置和管理线程的 "),s("code",[t._v("run loop")]),t._v("。您的应用程序不需要显式地创建这些对象;每个线程(包括应用程序的主线程)都有一个相关的 "),s("code",[t._v("run loop")]),t._v(" 对象。然而，只有次要线程需要显式地运行它们的 "),s("code",[t._v("run loop")]),t._v("。作为应用程序启动过程的一部分，应用程序框架自动在主线程上设置并运行 "),s("code",[t._v("run loop")]),t._v("。")]),t._v(" "),s("p",[t._v("下面的部分提供了关于运行循环以及如何为应用程序配置它们的更多信息。有关 "),s("code",[t._v("run loop 对象")]),t._v("的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/foundation/nsrunloop",target:"_blank",rel:"noopener noreferrer"}},[t._v("NSRunLoop 类参考"),s("OutboundLink")],1),t._v("和 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/corefoundation/cfrunloop",target:"_blank",rel:"noopener noreferrer"}},[t._v("CFRunLoop 参考"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"一个运行循环的解剖"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一个运行循环的解剖"}},[t._v("#")]),t._v(" 一个运行循环的解剖")]),t._v(" "),s("p",[s("code",[t._v("run loop")]),t._v(" 就像它的名字一样。它是线程进入并用于运行事件处理程序以响应传入事件的循环。您的代码提供了用于实现运行循环的实际循环部分的控制语句—换句话说，您的代码提供了驱动运行循环的 "),s("code",[t._v("while")]),t._v(" 或 "),s("code",[t._v("for")]),t._v(" 循环。在循环中，使用 "),s("code",[t._v("run loop")]),t._v(" 对象来“运行”事件处理代码，该代码接收事件并调用安装的处理程序。")]),t._v(" "),s("p",[s("code",[t._v("run loop")]),t._v("从两种不同类型的源接收事件。输入源提供异步事件，通常是来自另一个线程或不同应用程序的消息。计时器源提供同步事件，在预定的时间或重复的间隔发生。两种类型的源在事件到达时都使用特定于应用程序的处理程序例程来处理事件。")]),t._v(" "),s("p",[t._v("图 3-1 展示了 "),s("code",[t._v("run loop")]),t._v(" 的概念结构和各种来源。输入源将异步事件传递给相应的处理程序，并导致 "),s("code",[t._v("runUntilDate:")]),t._v(" 方法(在线程关联的 "),s("code",[t._v("NSRunLoop")]),t._v(" 对象上调用)退出。计时器源将事件传递给它们的处理程序例程，但不会导致运行循环退出。")]),t._v(" "),s("p",[t._v("图 3-1 "),s("img",{attrs:{src:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Multithreading/Art/runloop.jpg",alt:"Structure of a run loop and its sources"}})]),t._v(" "),s("p",[t._v("除了处理输入源，运行循环还生成关于运行循环行为的通知。已注册的运行循环观察器可以接收这些通知，并使用它们对线程进行额外的处理。使用 "),s("code",[t._v("Core Foundation")]),t._v(" 在线程上安装运行循环观察者。")]),t._v(" "),s("p",[t._v("下面的部分提供了关于运行循环的组件及其运行模式的更多信息。它们还描述了事件处理期间在不同时间生成的通知。")]),t._v(" "),s("h3",{attrs:{id:"运行循环模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行循环模式"}},[t._v("#")]),t._v(" 运行循环模式")]),t._v(" "),s("p",[t._v("运行循环模式是要监视的输入源和计时器的集合，以及要通知的运行循环观察者的集合。每次运行 "),s("code",[t._v("run loop")]),t._v(" 时，都指定(显式或隐式)要运行的特定“模式”。在运行循环的过程中，只监视与该模式相关的源，并允许交付其事件。(类似地，只有与该模式相关联的观察者才会被告知运行循环的进展。)与其他模式相关联的源保留任何新事件，直到后续事件以适当的模式通过循环。")]),t._v(" "),s("p",[t._v("在代码中，您通过名称来识别模式。"),s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 都定义了一个默认模式和几个常用模式，以及用于在代码中指定这些模式的字符串。您可以通过简单地为模式名称指定自定义字符串来定义自定义模式。虽然分配给自定义模式的名称是任意的，但这些模式的内容不是任意的。您必须确保将一个或多个输入源、计时器或运行循环观察者添加到您创建的任何模式中，以使它们有用。")]),t._v(" "),s("p",[t._v("在运行循环的特定过程中，可以使用模式从不需要的源中过滤事件。大多数时候，您将希望在系统定义的“默认”模式下运行您的 "),s("code",[t._v("run loop")]),t._v("。然而，模态面板可以在“模态”模式下运行。在这种模式下，只有与模态面板相关的源才会将事件传递给线程。对于次要线程，可以使用自定义模式来防止低优先级源在时间关键的操作期间交付事件。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("模式根据事件的来源而不是事件的类型进行区分。例如，您不会使用模式只匹配鼠标按下事件或键盘事件。您可以使用模式来监听不同的端口集、临时挂起计时器，或者以其他方式更改源并运行当前被监视的循环观察器。")])]),t._v(" "),s("p",[t._v("表 3-1 列出了 "),s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 定义的标准模式，以及当您使用该模式时的描述。“名称”列列出用于在代码中指定模式的实际常量。")]),t._v(" "),s("p",[t._v("表 3-1 预定义的运行循环模式")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Mode")]),t._v(" "),s("th",[t._v("Name")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("Default")]),t._v(" "),s("td",[t._v("NSDefaultRunLoopMode(Cocoa) kCFRunLoopDefaultMode (Core Foundation)")]),t._v(" "),s("td",[t._v("默认模式是大多数操作所使用的模式。大多数时候，您应该使用这种模式来启动您的 run 循环并配置您的输入源。")])]),t._v(" "),s("tr",[s("td",[t._v("Connection")]),t._v(" "),s("td",[t._v("NSConnectionReplyMode (Cocoa)")]),t._v(" "),s("td",[t._v("Cocoa 将此模式与 NSConnection 对象结合使用来监视应答。您自己应该很少需要使用这种模式。")])]),t._v(" "),s("tr",[s("td",[t._v("Modal")]),t._v(" "),s("td",[t._v("NSModalPanelRunLoopMode (Cocoa)")]),t._v(" "),s("td",[t._v("Cocoa 使用此模式来识别用于模态面板的事件。")])]),t._v(" "),s("tr",[s("td",[t._v("Event tracking")]),t._v(" "),s("td",[t._v("NSEventTrackingRunLoopMode (Cocoa)")]),t._v(" "),s("td",[t._v("Cocoa 使用这种模式在鼠标拖动循环和其他类型的用户界面跟踪循环期间限制传入的事件。")])]),t._v(" "),s("tr",[s("td",[t._v("Common modes")]),t._v(" "),s("td",[t._v("NSRunLoopCommonModes (Cocoa) kCFRunLoopCommonModes (Core Foundation)")]),t._v(" "),s("td",[t._v("这是一组可配置的常用模式。将输入源与该模式关联也将其与组中的每个模式关联。对于 Cocoa 应用程序，该集合默认包括默认模式、模态模式和事件跟踪模式。Core Foundation 最初只包含默认模式。您可以使用 CFRunLoopAddCommonMode 函数向该集合添加自定义模式。")])])])]),t._v(" "),s("h3",{attrs:{id:"输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#输入源"}},[t._v("#")]),t._v(" 输入源")]),t._v(" "),s("p",[t._v("输入源以异步方式向线程交付事件。事件的源取决于输入源的类型，通常为两类之一。基于端口的输入源监视应用程序的 "),s("code",[t._v("Mach")]),t._v(" 端口。自定义输入源监视自定义事件源。就运行循环而言，输入源是基于端口的还是自定义的并不重要。系统通常实现这两种类型的输入源，您可以按原样使用。这两个来源之间的唯一区别是它们是如何发出信号的。基于端口的源由内核自动发出信号，而自定义源必须由另一个线程手动发出信号。")]),t._v(" "),s("p",[t._v("当您创建一个输入源时，您将其分配给运行循环的一个或多个模式。在任何给定时刻，模式都会影响被监控的输入源。大多数时候，您在默认模式下运行 "),s("code",[t._v("run loop")]),t._v("，但您也可以指定自定义模式。如果输入源不处于当前监视模式，则它生成的任何事件都将保持，直到 "),s("code",[t._v("run loop")]),t._v("以正确模式运行。")]),t._v(" "),s("p",[t._v("下面的部分将描述一些输入源。")]),t._v(" "),s("h4",{attrs:{id:"基于端口的输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于端口的输入源"}},[t._v("#")]),t._v(" 基于端口的输入源")]),t._v(" "),s("p",[s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 为使用端口相关的对象和函数创建基于端口的输入源提供了内置支持。例如，在 "),s("code",[t._v("Cocoa")]),t._v(" 中，您根本不需要直接创建输入源。您只需创建一个端口对象，并使用 "),s("code",[t._v("NSPort")]),t._v(" 的方法将该端口添加到 "),s("code",[t._v("run loop")]),t._v(" 中。端口对象为您处理所需输入源的创建和配置。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Core Foundation")]),t._v(" 中，您必须手动创建端口及其运行循环源。在这两种情况下，您都使用与端口不透明类型("),s("code",[t._v("CFMachPortRef")]),t._v("、"),s("code",[t._v("CFMessagePortRef")]),t._v(" 或 "),s("code",[t._v("CFSocketRef")]),t._v(")相关联的函数来创建适当的对象。")]),t._v(" "),s("p",[t._v("有关如何设置和配置基于端口的自定义源的示例，请参见"),s("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E5%9F%BA%E4%BA%8E%E7%AB%AF%E5%8F%A3%E7%9A%84%E8%BE%93%E5%85%A5%E6%BA%90"}},[t._v("配置基于端口的输入源")]),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"自定义输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义输入源"}},[t._v("#")]),t._v(" 自定义输入源")]),t._v(" "),s("p",[t._v("要创建自定义输入源，必须使用 "),s("code",[t._v("Core Foundation")]),t._v(" 中与 "),s("code",[t._v("CFRunLoopSourceRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型相关联的函数。您可以使用几个回调函数配置自定义输入源。"),s("code",[t._v("Core Foundation")]),t._v(" 在不同的点调用这些函数来配置源，处理任何传入的事件，并在从 "),s("code",[t._v("run loop")]),t._v(" 中删除源时拆除源。")]),t._v(" "),s("p",[t._v("除了在事件到达时定义自定义源的行为外，还必须定义事件交付机制。源的这一部分在单独的线程上运行，负责向输入源提供其数据，并在数据准备好进行处理时向其发出信号。事件传递机制由您决定，但不必过于复杂。")]),t._v(" "),s("p",[t._v("有关如何创建自定义输入源的示例，请参见"),s("a",{attrs:{href:"#%E5%AE%9A%E4%B9%89%E8%87%AA%E5%AE%9A%E4%B9%89%E8%BE%93%E5%85%A5%E6%BA%90"}},[t._v("定义自定义输入源")]),t._v("。有关自定义输入源的参考信息，请参见 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/corefoundation/cfrunloopsource-rhr",target:"_blank",rel:"noopener noreferrer"}},[t._v("CFRunLoopSource 参考"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h4",{attrs:{id:"cocoa-执行选择器输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cocoa-执行选择器输入源"}},[t._v("#")]),t._v(" Cocoa 执行选择器输入源")]),t._v(" "),s("p",[t._v("除了基于端口的源之外，"),s("code",[t._v("Cocoa")]),t._v(" 还定义了一个自定义的输入源，允许您在任何线程上执行选择器。与基于端口的源一样，执行选择器请求在目标线程上序列化，缓解了在一个线程上运行多个方法时可能出现的许多同步问题。与基于端口的源不同，执行选择器源在执行其选择器后从运行循环中删除自己。")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("在 OS X v10.5 之前，执行选择器源主要用于向主线程发送消息，但在 OS X v10.5 及其后版本和 iOS 中，您可以使用它们向任何线程发送消息。")])]),t._v(" "),s("p",[t._v("当在另一个线程上执行选择器时，目标线程必须有一个活动的运行循环。对于您创建的线程，这意味着等待直到您的代码显式地启动运行循环。但是，因为主线程开始自己的运行循环，所以只要应用程序调用应用程序委托的 "),s("code",[t._v("applicationDidFinishLaunching:")]),t._v(" 方法，您就可以开始在该线程上发出调用。"),s("code",[t._v("run loop")]),t._v(" 在每次循环中处理所有排队的执行选择器调用，而不是在每次循环迭代中处理一个。")]),t._v(" "),s("p",[t._v("表 3-2 列出了在 "),s("code",[t._v("NSObject")]),t._v(" 上定义的可用于在其他线程上执行选择器的方法。因为这些方法是在 "),s("code",[t._v("NSObject")]),t._v(" 上声明的，所以你可以在任何可以访问 "),s("code",[t._v("Objective-C")]),t._v(" 对象的线程中使用它们，包括 "),s("code",[t._v("POSIX")]),t._v(" 线程。这些方法实际上并不创建执行选择器的新线程。")]),t._v(" "),s("p",[t._v("表 3-2")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("Methods")]),t._v(" "),s("th",[t._v("Description")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[s("code",[t._v("performSelectorOnMainThread:withObject:waitUntilDone:")]),t._v(" "),s("code",[t._v("performSelectorOnMainThread:withObject:waitUntilDone:modes:")])]),t._v(" "),s("td",[t._v("在应用程序的主线程的下一个运行循环中执行指定的选择器。这些方法提供了在执行选择器之前阻塞当前线程的选项。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("performSelector:onThread:withObject:waitUntilDone:")]),t._v(" "),s("code",[t._v("performSelector:onThread:withObject:waitUntilDone:modes:")])]),t._v(" "),s("td",[t._v("在有 NSThread 对象的任何线程上执行指定的选择器。这些方法提供了在执行选择器之前阻塞当前线程的选项。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("performSelector:withObject:afterDelay:")]),t._v(" "),s("code",[t._v("performSelector:withObject:afterDelay:inModes:")])]),t._v(" "),s("td",[t._v("在下一个运行循环期间和一个可选的延迟期间之后，对当前线程执行指定的选择器。因为它要等到下一个运行循环周期才能执行选择器，所以这些方法与当前执行的代码相比提供了一个自动的最小延迟。多个排队的选择器按照排队的顺序依次执行。")])]),t._v(" "),s("tr",[s("td",[s("code",[t._v("cancelPreviousPerformRequestsWithTarget:")]),t._v(" "),s("code",[t._v("cancelPreviousPerformRequestsWithTarget:selector:object:")])]),t._v(" "),s("td",[t._v("允许你使用"),s("code",[t._v("performSelector:withObject:afterDelay:")]),t._v(" 或 "),s("code",[t._v("performSelector:withObject:afterDelay:inModes:")]),t._v(" 方法取消发送到当前线程的消息。")])])])]),t._v(" "),s("p",[t._v("有关这些方法的详细信息，请参见 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/objectivec/nsobject",target:"_blank",rel:"noopener noreferrer"}},[t._v("NSObject 类参考"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"timer-源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#timer-源"}},[t._v("#")]),t._v(" Timer 源")]),t._v(" "),s("p",[t._v("计时器源在未来的一个预设时间同步地向您的线程交付事件。定时器是线程通知自己做某事的一种方式。例如，搜索字段可以使用计时器，在用户连续的击键间隔过了一定的时间后启动自动搜索。利用这个延迟时间，用户有机会在开始搜索之前输入尽可能多的所需搜索字符串。")]),t._v(" "),s("p",[t._v("尽管计时器会生成基于时间的通知，但它并不是一种实时机制。与输入源一样，计时器与运行循环的特定模式相关联。如果计时器不在运行循环当前监视的模式中，则在您以计时器支持的模式之一运行运行循环之前，它不会被触发。类似地，如果在运行循环执行处理程序例程的过程中触发计时器，则计时器将等待到下一次通过运行循环来调用其处理程序例程。如果 "),s("code",[t._v("run loop")]),t._v(" 根本没有运行，则计时器永远不会触发。")]),t._v(" "),s("p",[t._v("通过配置计时器，可以只生成一次或多次事件。重复计时器根据计划的触发时间(而不是实际的触发时间)自动重新调度自己。例如，如果一个计时器被安排在特定的时间发射，并且在那之后每 5 秒发射一次，那么预定的发射时间将总是落在最初的 5 秒时间间隔上，即使实际发射时间被延迟。如果触发时间延迟到错过一个或多个计划的触发时间，则计时器在错过的时间段内只触发一次。在错过的时间段内触发后，定时器被重新调度到下一个预定的触发时间。")]),t._v(" "),s("p",[t._v("有关配置计时器源的更多信息，请参见"),s("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE%E5%AE%9A%E6%97%B6%E5%99%A8%E6%BA%90"}},[t._v("配置定时器源")]),t._v("。有关参考信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/foundation/timer",target:"_blank",rel:"noopener noreferrer"}},[t._v("NSTimer 类参考"),s("OutboundLink")],1),t._v("或 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/corefoundation/cfrunlooptimer-rhk",target:"_blank",rel:"noopener noreferrer"}},[t._v("CFRunLoopTimer 参考"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"运行循环观察者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#运行循环观察者"}},[t._v("#")]),t._v(" 运行循环观察者")]),t._v(" "),s("p",[t._v("源在发生适当的异步或同步事件时触发，而运行循环观察器则在运行循环本身执行期间的特殊位置触发。您可以使用运行循环观察程序来准备线程处理给定事件，或者在线程进入睡眠状态之前准备线程。你可以在运行循环中将以下事件与运行循环中的运行循环观察者联系起来:")]),t._v(" "),s("ul",[s("li",[t._v("运行循环的入口。")]),t._v(" "),s("li",[t._v("当运行循环即将处理一个计时器时。")]),t._v(" "),s("li",[t._v("当运行循环要处理一个输入源时。")]),t._v(" "),s("li",[t._v("当运行循环即将进入休眠状态时。")]),t._v(" "),s("li",[t._v("当运行循环被唤醒时，但是在它处理唤醒它的事件之前。")]),t._v(" "),s("li",[t._v("从运行循环的出口。")])]),t._v(" "),s("p",[t._v("你可以使用 "),s("code",[t._v("Core Foundation")]),t._v(" 在应用中添加运行循环观察员。要创建一个 "),s("code",[t._v("run loop")]),t._v(" 观察者，你需要创建一个 "),s("code",[t._v("CFRunLoopObserverRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型的新实例。此类型跟踪自定义回调函数及其感兴趣的活动。")]),t._v(" "),s("p",[t._v("与计时器类似，运行循环观察器可以一次或多次使用。一次观察器在触发后将自己从运行循环中移除，而重复观察器仍然连接。在创建观察者时，您指定它是运行一次还是重复运行。")]),t._v(" "),s("p",[t._v("有关如何创建运行循环观察者的示例，请参见"),s("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE-run-loop"}},[t._v("配置 Run Loop")]),t._v("。参考信息请参见"),s("a",{attrs:{href:"https://developer.apple.com/documentation/corefoundation/cfrunloopobserver",target:"_blank",rel:"noopener noreferrer"}},[t._v("CFRunLoopObserver 参考"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"事件的运行循环序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#事件的运行循环序列"}},[t._v("#")]),t._v(" 事件的运行循环序列")]),t._v(" "),s("p",[t._v("每次运行它，线程的运行循环都会处理挂起事件，并为任何附加的观察者生成通知。它这样做的顺序是非常具体的，如下:")]),t._v(" "),s("ol",[s("li",[t._v("通知观察者, 运行循环已经进入。")]),t._v(" "),s("li",[t._v("通知观察者, 任何准备好的计时器即将启动。")]),t._v(" "),s("li",[t._v("通知观察者, 任何非基于端口的输入源即将启动。")]),t._v(" "),s("li",[t._v("触发任何可以触发的非基于端口的输入源。")]),t._v(" "),s("li",[t._v("如果基于端口的输入源已经准备好并等待触发，则立即处理事件。执行步骤 9。")]),t._v(" "),s("li",[t._v("通知观察者, 线程即将进入睡眠状态。")]),t._v(" "),s("li",[t._v("让线程休眠，直到下列事件之一发生:\n"),s("ul",[s("li",[t._v("事件到达基于端口的输入源。")]),t._v(" "),s("li",[t._v("计时器启动。")]),t._v(" "),s("li",[t._v("为运行循环设置的超时值将过期。")]),t._v(" "),s("li",[t._v("运行循环被显式唤醒。")])])]),t._v(" "),s("li",[t._v("通知观察者线程刚刚醒来。")]),t._v(" "),s("li",[t._v("处理挂起事件。\n"),s("ul",[s("li",[t._v("如果启动了用户定义的计时器，则处理计时器事件并重新启动循环。执行步骤 2。")]),t._v(" "),s("li",[t._v("如果触发了输入源，则交付事件。")]),t._v(" "),s("li",[t._v("如果运行循环被显式唤醒，但还没有超时，则重新启动循环。执行步骤 2。")])])]),t._v(" "),s("li",[t._v("通知观察者, 运行循环已经退出。")])]),t._v(" "),s("p",[t._v("由于定时器和输入源的 "),s("code",[t._v("observer")]),t._v(" 通知是在这些事件实际发生之前发出的，因此在通知时间和实际事件发生时间之间可能存在差距。如果这些事件之间的时间很关键，您可以使用 "),s("code",[t._v("sleep")]),t._v(" 和 "),s("code",[t._v("awake-from-sleep")]),t._v(" 通知来帮助您关联实际事件之间的时间。")]),t._v(" "),s("p",[t._v("由于计时器和其他周期性事件是在运行"),s("code",[t._v("run loop")]),t._v("时交付的，因此绕过该循环会中断这些事件的交付。当您通过进入循环并重复请求应用程序的事件来实现鼠标跟踪例程时，就会发生这种行为的典型示例。因为您的代码是直接获取事件，而不是让应用程序正常调度这些事件，所以活动计时器将无法触发，直到鼠标跟踪例程退出并将控制权返回给应用程序之后。")]),t._v(" "),s("p",[t._v("可以使用"),s("code",[t._v("run loop")]),t._v("对象显式地唤醒"),s("code",[t._v("run loop")]),t._v("。其他事件也可能导致运行循环被唤醒。例如，添加另一个非基于端口的输入源将唤醒"),s("code",[t._v("run loop")]),t._v("，以便可以立即处理输入源，而不是等待其他事件发生。")]),t._v(" "),s("h2",{attrs:{id:"什么时候使用运行循环"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#什么时候使用运行循环"}},[t._v("#")]),t._v(" 什么时候使用运行循环?")]),t._v(" "),s("p",[t._v("唯一需要显式运行 "),s("code",[t._v("run loop")]),t._v(" 的时候是为应用程序创建次要线程的时候。应用程序主线程的运行循环是基础设施的重要组成部分。因此，应用程序框架提供了运行主应用程序循环的代码，并自动启动该循环。"),s("code",[t._v("iOS")]),t._v(" 中的 "),s("code",[t._v("UIApplication")]),t._v("(或 "),s("code",[t._v("OS X")]),t._v(" 中的 "),s("code",[t._v("NSApplication")]),t._v(")的 "),s("code",[t._v("run")]),t._v(" 方法启动一个应用程序的主循环，作为正常启动序列的一部分。如果你使用 "),s("code",[t._v("Xcode")]),t._v(" 模板项目来创建你的应用程序，你永远不应该显式地调用这些例程。")]),t._v(" "),s("p",[t._v("对于次要线程，您需要决定是否需要运行循环，如果需要，则自己配置并启动它。在所有情况下都不需要启动线程的运行循环。例如，如果您使用一个线程来执行一些长期运行的和预先确定的任务，您可能可以避免启动运行循环。运行循环适用于需要与线程有更多交互的情况。例如，如果你计划做以下任何一件事，你需要启动一个运行循环:")]),t._v(" "),s("ul",[s("li",[t._v("使用端口或自定义输入源与其他线程通信。")]),t._v(" "),s("li",[t._v("在线程上使用计时器。")]),t._v(" "),s("li",[t._v("在 "),s("code",[t._v("Cocoa")]),t._v(" 应用程序中使用任何 "),s("code",[t._v("performSelector…")]),t._v(" 方法。")]),t._v(" "),s("li",[t._v("保持线程运行以执行定期任务。")])]),t._v(" "),s("p",[t._v("如果选择使用运行循环，则配置和设置很简单。不过，与所有线程编程一样，您应该有一个在适当情况下退出次要线程的计划。通过让线程退出来干净地结束线程总是比强制它终止要好。关于如何配置和退出运行循环的信息在"),s("a",{attrs:{href:"#%E4%BD%BF%E7%94%A8%E8%BF%90%E8%A1%8C%E5%BE%AA%E7%8E%AF%E5%AF%B9%E8%B1%A1"}},[t._v("使用运行循环对象")]),t._v("中描述。")]),t._v(" "),s("h2",{attrs:{id:"使用运行循环对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用运行循环对象"}},[t._v("#")]),t._v(" 使用运行循环对象")]),t._v(" "),s("p",[s("code",[t._v("run loop")]),t._v(" 对象提供了将输入源、计时器和 "),s("code",[t._v("run-loop")]),t._v(" 观察器添加到运行循环并运行它的主接口。每个线程都有一个与之相关的运行循环对象。在 "),s("code",[t._v("Cocoa")]),t._v(" 中，这个对象是 "),s("code",[t._v("NSRunLoop")]),t._v(" 类的一个实例。在低级应用程序中，它是一个指向 "),s("code",[t._v("CFRunLoopRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型的指针。")]),t._v(" "),s("h3",{attrs:{id:"获取一个-run-loop-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取一个-run-loop-对象"}},[t._v("#")]),t._v(" 获取一个 Run Loop 对象")]),t._v(" "),s("p",[t._v("要获取当前线程的运行循环，可以使用以下方法之一:")]),t._v(" "),s("ul",[s("li",[t._v("在 "),s("code",[t._v("Cocoa")]),t._v(" 应用程序中，使用 "),s("code",[t._v("NSRunLoop")]),t._v(" 的 "),s("code",[t._v("currentRunLoop")]),t._v(" 类方法来检索 "),s("code",[t._v("NSRunLoop")]),t._v(" 对象。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("CFRunLoopGetCurrent")]),t._v(" 函数。")])]),t._v(" "),s("p",[t._v("虽然它们不是免费的桥接类型，但当需要时，您可以从 "),s("code",[t._v("NSRunLoop")]),t._v(" 对象中获得 "),s("code",[t._v("CFRunLoopRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型。 "),s("code",[t._v("NSRunLoop")]),t._v(" 类定义了一个 "),s("code",[t._v("getCFRunLoop")]),t._v(" 方法，该方法返回一个 "),s("code",[t._v("CFRunLoopRef")]),t._v(" 类型，您可以将该类型传递给 "),s("code",[t._v("Core Foundation")]),t._v(" 例程。因为这两个对象引用同一个运行循环，您可以根据需要混合调用 "),s("code",[t._v("NSRunLoop")]),t._v(" 对象和 "),s("code",[t._v("CFRunLoopRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型。")]),t._v(" "),s("h3",{attrs:{id:"配置-run-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-run-loop"}},[t._v("#")]),t._v(" 配置 Run Loop")]),t._v(" "),s("p",[t._v("在次要线程上运行 "),s("code",[t._v("run loop")]),t._v(" 之前，必须至少向其添加一个输入源或计时器。如果运行循环没有任何要监视的源，那么当您试图运行它时，它将立即退出。有关如何向运行循环添加源的示例，请参见"),s("a",{attrs:{href:"#%E9%85%8D%E7%BD%AE-run-loop-%E6%BA%90"}},[t._v("配置 Run Loop 源")]),t._v("。")]),t._v(" "),s("p",[t._v("除了安装源代码之外，您还可以安装 "),s("code",[t._v("run loop")]),t._v(" 观察器，并使用它们来检测 "),s("code",[t._v("run loop")]),t._v(" 的不同执行阶段。要安装运行循环观察者，您需要创建一个 "),s("code",[t._v("CFRunLoopObserverRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型，并使用 "),s("code",[t._v("CFRunLoopAddObserver")]),t._v(" 函数将其添加到您的运行循环中。运行循环观察器必须使用 "),s("code",[t._v("Core Foundation")]),t._v(" 创建，即使对于 "),s("code",[t._v("Cocoa")]),t._v(" 应用程序也是如此。")]),t._v(" "),s("p",[t._v("清单 3-1 显示了一个线程的主例程，该线程将一个运行循环观察者附加到其运行循环。这个示例的目的是向您展示如何创建一个 "),s("code",[t._v("run loop")]),t._v(" 观察者，因此代码只是简单地设置了一个 "),s("code",[t._v("run loop")]),t._v(" 观察者来监视所有 "),s("code",[t._v("run loop")]),t._v(" 活动。基本处理程序例程(未显示)只是在处理计时器请求时记录运行循环活动。")]),t._v(" "),s("p",[t._v("清单 3-1 创建一个"),s("code",[t._v("run loop")]),t._v("观察者")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("threadMain\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The application uses garbage collection, so no autorelease pool is needed.")]),t._v("\n    NSRunLoop"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myRunLoop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a run loop observer and attach it to the run loop.")]),t._v("\n    CFRunLoopObserverContext  context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFRunLoopObserverRef    observer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopObserverCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kCFAllocatorDefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            kCFRunLoopAllActivities"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myRunLoopObserver"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        CFRunLoopRef    cfLoop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myRunLoop getCFRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopAddObserver")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("cfLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" observer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFRunLoopDefaultMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create and schedule the timer.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer scheduledTimerWithTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n                selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("doFireTimer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" userInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil repeats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    NSInteger    loopCount "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Run the run loop 10 times to let the timer fire.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myRunLoop runUntilDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate dateWithTimeIntervalSinceNow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        loopCount"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("loopCount"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br")])]),s("p",[t._v("在为长期存在的线程配置运行循环时，最好至少添加一个输入源来接收消息。虽然您可以只带一个计时器进入运行循环，但一旦计时器触发，它通常是无效的，这将导致运行循环退出。附加一个重复计时器可以使运行循环在较长的时间内运行，但需要定期触发计时器来唤醒线程，这实际上是轮询的另一种形式。相反，输入源等待事件发生，在事件发生之前，线程一直处于休眠状态。")]),t._v(" "),s("h3",{attrs:{id:"启动-run-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#启动-run-loop"}},[t._v("#")]),t._v(" 启动 Run Loop")]),t._v(" "),s("p",[t._v("只有应用程序中的次要线程才需要启动运行循环。一个运行循环必须至少有一个要监视的输入源或计时器。如果没有连接，则运行循环立即退出。")]),t._v(" "),s("p",[t._v("有几种方法可以启动运行循环，包括以下方法:")]),t._v(" "),s("ul",[s("li",[t._v("无条件地")]),t._v(" "),s("li",[t._v("有一个固定的时间限制")]),t._v(" "),s("li",[t._v("在特定模式下")])]),t._v(" "),s("p",[t._v("无条件地进入 "),s("code",[t._v("run loop")]),t._v("是最简单的选择，但也是最不可取的选择。无条件地运行 "),s("code",[t._v("run loop")]),t._v(" 会将线程置于永久循环中，这使得您几乎无法控制 "),s("code",[t._v("run loop")]),t._v(" 本身。您可以添加和删除输入源和计时器，但停止 "),s("code",[t._v("run loop")]),t._v(" 的唯一方法是终止它。也没有办法在自定义模式下运行 "),s("code",[t._v("run loop")]),t._v("。")]),t._v(" "),s("p",[t._v("与其无条件地运行 "),s("code",[t._v("run loop")]),t._v("，不如使用超时值运行 "),s("code",[t._v("run loop")]),t._v("。使用超时值时，运行循环将一直运行到事件到达或分配的时间到期。如果事件到达，则将该事件分派给处理程序进行处理，然后退出 "),s("code",[t._v("run loop")]),t._v("。然后，您的代码可以重新启动运行循环，以处理下一个事件。如果分配的时间到期了，您可以简单地重新启动 "),s("code",[t._v("run loop")]),t._v("或使用这段时间来做任何需要的事件。")]),t._v(" "),s("p",[t._v("除了超时值，您还可以使用特定模式运行您的 "),s("code",[t._v("run loop")]),t._v("。模式和超时值不是互斥的，可以在启动 "),s("code",[t._v("run loop")]),t._v("时使用。模式限制了向运行循环交付事件的源的类型，并在"),s("a",{attrs:{href:"#%E8%BF%90%E8%A1%8C%E5%BE%AA%E7%8E%AF%E6%A8%A1%E5%BC%8F"}},[t._v("运行循环模式")]),t._v("中进行了更详细的描述。")]),t._v(" "),s("p",[t._v("清单 3-2 显示了线程主入口例程的框架版本。本例的关键部分展示了 "),s("code",[t._v("run loop")]),t._v(" 的基本结构。本质上，您将输入源和计时器添加到运行循环中，然后重复调用其中一个例程来启动运行循环。每次 "),s("code",[t._v("run loop")]),t._v(" 例程返回时，您都要检查是否出现了任何可能需要退出线程的条件。这个例子使用了 "),s("code",[t._v("Core Foundation")]),t._v(" 的 "),s("code",[t._v("run loop")]),t._v(" 例程，这样它就可以检查返回结果并确定为什么退出了 "),s("code",[t._v("run loop")]),t._v("。如果您正在使用 "),s("code",[t._v("Cocoa")]),t._v(" 并且不需要检查返回值，您也可以使用 "),s("code",[t._v("NSRunLoop")]),t._v(" 类的方法以类似的方式运行 "),s("code",[t._v("run loop")]),t._v("。(关于调用 "),s("code",[t._v("NSRunLoop")]),t._v(" 类方法的 "),s("code",[t._v("run loop")]),t._v(" 示例，请参见清单 3-14。)")]),t._v(" "),s("p",[t._v("清单 3-2 运行 Runloop")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("skeletonThreadMain\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set up an autorelease pool here if not using garbage collection.")]),t._v("\n    BOOL done "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add your sources or timers to the run loop and do any other setup.")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Start the run loop but return after each source is handled.")]),t._v("\n        SInt32    result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopRunInMode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kCFRunLoopDefaultMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a source explicitly stopped the run loop, or if there are no")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// sources or timers, go ahead and exit.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" kCFRunLoopRunStopped"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" kCFRunLoopRunFinished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            done "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Check for any other exit conditions here and set the")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// done variable as needed.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Clean up code here. Be sure to release any allocated autorelease pools.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br")])]),s("h3",{attrs:{id:"退出-run-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#退出-run-loop"}},[t._v("#")]),t._v(" 退出 Run Loop")]),t._v(" "),s("p",[t._v("可以递归地运行一个 "),s("code",[t._v("run loop")]),t._v("。换句话说，您可以从输入源或计时器的处理程序例程中调用 "),s("code",[t._v("CFRunLoopRun")]),t._v(" 、"),s("code",[t._v("CFRunLoopRunInMode")]),t._v(" 或任何 "),s("code",[t._v("NSRunLoop")]),t._v(" 方法来启动运行循环。在这样做时，可以使用希望运行嵌套 "),s("code",[t._v("run loop")]),t._v("的任何模式，包括外部 "),s("code",[t._v("run loop")]),t._v("正在使用的模式。")]),t._v(" "),s("p",[t._v("在处理一个事件之前，有两种方法使运行循环退出:")]),t._v(" "),s("ul",[s("li",[t._v("将 "),s("code",[t._v("run loop")]),t._v(" 配置为使用超时值运行。")]),t._v(" "),s("li",[t._v("让 "),s("code",[t._v("run loop")]),t._v(" 停止。")])]),t._v(" "),s("p",[t._v("如果您能够管理超时值，当然首选使用超时值。指定超时值可以让 "),s("code",[t._v("run loop")]),t._v(" 在退出之前完成所有的正常处理，包括向 "),s("code",[t._v("run loop")]),t._v(" 观察者传递通知。")]),t._v(" "),s("p",[t._v("使用 "),s("code",[t._v("CFRunLoopStop")]),t._v(" 函数显式地停止运行循环会产生类似于超时的结果。运行循环发送任何剩余的运行循环通知，然后退出。不同之处在于，您可以在您无条件启动的运行循环中使用这种技术。")]),t._v(" "),s("p",[t._v("尽管删除运行循环的输入源和计时器也可能导致运行循环退出，但这并不是停止运行循环的可靠方法。一些系统例程将输入源添加到运行循环中，以处理所需的事件。因为您的代码可能不知道这些输入源，所以它将无法删除它们，这将阻止运行循环退出。")]),t._v(" "),s("h3",{attrs:{id:"线程安全和-run-loop-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#线程安全和-run-loop-对象"}},[t._v("#")]),t._v(" 线程安全和 Run Loop 对象")]),t._v(" "),s("p",[t._v("线程安全性取决于您使用的操作运行循环的 "),s("code",[t._v("API")]),t._v(" 。"),s("code",[t._v("Core Foundation")]),t._v(" 中的函数通常是线程安全的，可以从任何线程调用。然而，如果您正在执行更改运行循环配置的操作，那么尽可能从拥有运行循环的线程执行此操作仍然是一种好做法。")]),t._v(" "),s("p",[s("code",[t._v("Cocoa")]),t._v(" "),s("code",[t._v("NSRunLoop")]),t._v(" 类不像它的 "),s("code",[t._v("Core Foundation")]),t._v(" 类那样具有固有的线程安全性。如果你正在使用 "),s("code",[t._v("NSRunLoop")]),t._v(" 类来修改你的运行循环，你应该只从拥有该运行循环的同一个线程这样做。在属于不同线程的运行循环中添加输入源或计时器可能会导致代码崩溃或以意想不到的方式运行。")]),t._v(" "),s("h2",{attrs:{id:"配置-run-loop-源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-run-loop-源"}},[t._v("#")]),t._v(" 配置 Run Loop 源")]),t._v(" "),s("p",[t._v("下面的部分展示了如何在 "),s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 中设置不同类型的输入源的示例。")]),t._v(" "),s("h3",{attrs:{id:"定义自定义输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义自定义输入源"}},[t._v("#")]),t._v(" 定义自定义输入源")]),t._v(" "),s("p",[t._v("创建自定义输入源需要定义以下内容:")]),t._v(" "),s("ul",[s("li",[t._v("您希望输入源处理的信息。")]),t._v(" "),s("li",[t._v("一个调度程序例程，让感兴趣的客户知道如何联系您的输入源。")]),t._v(" "),s("li",[t._v("执行任何客户端发送的请求的处理程序。")]),t._v(" "),s("li",[t._v("一个取消程序，使您的输入源无效。")])]),t._v(" "),s("p",[t._v("因为您创建了一个定制输入源来处理定制信息，所以实际配置被设计为灵活的。调度程序、处理程序和取消例程是自定义输入源几乎总是需要的关键例程。然而，其余大部分输入源行为发生在这些处理程序例程之外。例如，由您来定义将数据传递到输入源以及将输入源的存在传递给其他线程的机制。")]),t._v(" "),s("p",[t._v("图 3-2 显示了一个自定义输入源的示例配置。在本例中，应用程序的主线程维护对输入源、该输入源的自定义命令缓冲区以及安装了输入源的 "),s("code",[t._v("run loop")]),t._v(" 的引用。当主线程有一个任务想要传递给工作线程时，它会向命令缓冲区发送一个命令，以及工作线程启动该任务所需的任何信息。(因为主线程和工作线程的输入源都可以访问命令缓冲区，所以访问必须是同步的。)一旦发布了命令，主线程就会向输入源发出信号，并唤醒工作线程的运行循环。在接收到 "),s("code",[t._v("wake up")]),t._v(" 命令后，"),s("code",[t._v("run loop")]),t._v(" 调用输入源的处理程序，该处理程序处理命令缓冲区中找到的命令。")]),t._v(" "),s("p",[t._v("图 3-2 "),s("img",{attrs:{src:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Multithreading/Art/custominputsource.jpg",alt:"Operating a custom input source"}})]),t._v(" "),s("p",[t._v("下面的部分解释了上图中自定义输入源的实现，并显示了需要实现的关键代码")]),t._v(" "),s("h4",{attrs:{id:"定义输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义输入源"}},[t._v("#")]),t._v(" 定义输入源")]),t._v(" "),s("p",[t._v("定义自定义输入源需要使用核心基础例程来配置运行循环源并将其附加到运行循环。虽然基本的处理程序是基于 "),s("code",[t._v("C")]),t._v(" 的函数，但这并不妨碍你为这些函数编写包装器，并使用 "),s("code",[t._v("Objective-C")]),t._v(" 或 "),s("code",[t._v("c++")]),t._v("来实现你的代码体。")]),t._v(" "),s("p",[t._v("图 3-2 中引入的输入源使用了一个 "),s("code",[t._v("Objective-C")]),t._v(" 对象来管理命令缓冲区，并与 "),s("code",[t._v("run loop")]),t._v(" 协调。清单 3-3 "),s("code",[t._v("显示了该对象的定义。RunLoopSource")]),t._v(" 对象管理一个命令缓冲区，并使用该缓冲区接收来自其他线程的消息。这个清单还显示了 "),s("code",[t._v("RunLoopContext")]),t._v(" 对象的定义，它实际上只是一个容器对象，用于将 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象和 "),s("code",[t._v("run loop")]),t._v(" 引用传递给应用程序的主线程。")]),t._v(" "),s("p",[t._v("清单 3-3 自定义输入源对象定义")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" RunLoopSource "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NSObject\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    CFRunLoopSourceRef runLoopSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    NSMutableArray"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addToCurrentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("invalidate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handler method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sourceFired"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Client interface for registering commands to process")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSInteger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("command withData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fireAllCommandsOnRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFRunLoopRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("runloop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// These are the CFRunLoopSourceRef callback functions.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourceScheduleRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFRunLoopRef rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFStringRef mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourcePerformRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourceCancelRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFRunLoopRef rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFStringRef mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// RunLoopContext is a container object used during registration of the input source.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@interface")]),t._v(" RunLoopContext "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" NSObject\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    CFRunLoopRef        runLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("        source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readonly"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" CFRunLoopRef runLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@property")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("readonly"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("initWithSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("src andLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFRunLoopRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@end")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br")])]),s("p",[t._v("尽管 "),s("code",[t._v("Objective-C")]),t._v(" 代码管理输入源的自定义数据，但是将输入源附加到运行循环需要基于 "),s("code",[t._v("c")]),t._v(" 的回调函数。当您实际将 "),s("code",[t._v("run loop")]),t._v(" 源附加到 "),s("code",[t._v("run loop")]),t._v(" 时，将调用第一个函数，如清单 3-4 所示。因为这个输入源只有一个客户机(主线程)，所以它使用 "),s("code",[t._v("scheduler")]),t._v(" 函数发送一条消息，以便在该线程上向应用程序委托注册自己。当委托想要与输入源通信时，它使用 "),s("code",[t._v("RunLoopContext")]),t._v(" 对象中的信息来完成。")]),t._v(" "),s("p",[t._v("清单 3-4 调度一个运行循环源")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourceScheduleRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFRunLoopRef rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFStringRef mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    AppDelegate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("   del "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AppDelegate sharedAppDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RunLoopContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" theContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RunLoopContext alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("obj andLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("del performSelectorOnMainThread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("registerSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                withObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("theContext waitUntilDone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("最重要的回调例程之一是在输入源发出信号时用于处理自定义数据的回调例程。清单 3-5 显示了与 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象关联的 "),s("code",[t._v("perform")]),t._v(" 回调例程。这个函数只是将完成工作的请求转发给 "),s("code",[t._v("sourceFired")]),t._v(" 方法，然后该方法处理命令缓冲区中出现的任何命令。")]),t._v(" "),s("p",[t._v("清单 3-5 在输入源中执行工作")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourcePerformRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("obj sourceFired"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[t._v("如果使用 "),s("code",[t._v("CFRunLoopSourceInvalidate")]),t._v(" 函数从运行循环中删除输入源，系统将调用输入源的取消例程。您可以使用这个例程通知客户端您的输入源不再有效，他们应该删除对它的任何引用。清单 3-6 显示了用 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象注册的取消回调例程。这个函数向应用程序委托发送另一个 "),s("code",[t._v("RunLoopContext")]),t._v(" 对象，但这一次要求委托删除对运行循环源的引用。")]),t._v(" "),s("p",[t._v("清单 3-6 使输入源无效")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("RunLoopSourceCancelRoutine")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFRunLoopRef rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CFStringRef mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" obj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopSource"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    AppDelegate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" del "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("AppDelegate sharedAppDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    RunLoopContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" theContext "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("RunLoopContext alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("obj andLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("rl"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("del performSelectorOnMainThread"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("removeSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                                withObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("theContext waitUntilDone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("应用程序委托的 "),s("code",[t._v("registerSource:")]),t._v("和 "),s("code",[t._v("removeSource:")]),t._v("方法的代码在"),s("a",{attrs:{href:"#%E4%B8%8E%E8%BE%93%E5%85%A5%E6%BA%90%E7%9A%84%E5%AE%A2%E6%88%B7%E7%AB%AF%E5%8D%8F%E8%B0%83"}},[t._v("与输入源的客户端协调")]),t._v("显示。")])]),t._v(" "),s("h4",{attrs:{id:"在-runloop-中安装输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-runloop-中安装输入源"}},[t._v("#")]),t._v(" 在 RunLoop 中安装输入源")]),t._v(" "),s("p",[t._v("清单 3-7 显示了 "),s("code",[t._v("RunLoopSource")]),t._v(" 类的 "),s("code",[t._v("init")]),t._v(" 和 "),s("code",[t._v("addToCurrentRunLoop")]),t._v(" 方法。 "),s("code",[t._v("init")]),t._v(" 方法创建 "),s("code",[t._v("CFRunLoopSourceRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型，该类型必须实际附加到 "),s("code",[t._v("run loop")]),t._v("。它将 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象本身作为上下文信息传递，以便回调例程有一个指向该对象的指针。直到工作线程调用 "),s("code",[t._v("addToCurrentRunLoop")]),t._v(" 方法，才会安装输入源，此时调用 "),s("code",[t._v("RunLoopSourceScheduleRoutine")]),t._v(" 回调函数。一旦将输入源添加到运行循环中，线程就可以运行它的运行循环来等待它。")]),t._v(" "),s("p",[t._v("清单 3-7 安装 Run Loop 源")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("init\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    CFRunLoopSourceContext    context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("RunLoopSourceScheduleRoutine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                        RunLoopSourceCancelRoutine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                        RunLoopSourcePerformRoutine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    runLoopSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopSourceCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    commands "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMutableArray alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("addToCurrentRunLoop\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    CFRunLoopRef runLoop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopGetCurrent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopAddSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" runLoopSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFRunLoopDefaultMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br")])]),s("h4",{attrs:{id:"与输入源的客户端协调"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#与输入源的客户端协调"}},[t._v("#")]),t._v(" 与输入源的客户端协调")]),t._v(" "),s("p",[t._v("要使您的输入源有用，您需要对其进行操作，并从另一个线程向其发出信号。输入源的全部意义就是让它的关联线程处于休眠状态，直到有事情可做。这个事实要求应用程序中的其他线程知道输入源并有方法与它通信。")]),t._v(" "),s("p",[t._v("通知客户您的输入源的一种方法是，当您的输入源首次安装在其 "),s("code",[t._v("run loop")]),t._v(" 中时，发送注册请求。您可以向尽可能多的客户端注册输入源，或者您可以简单地向某个中央机构注册，然后将您的输入源出售给感兴趣的客户端。清单 3-8 显示了由应用程序委托定义并在调用 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象的调度器函数时调用的注册方法。这个方法接收 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象提供的 "),s("code",[t._v("RunLoopContext")]),t._v(" 对象，并将其添加到其源列表中。此清单还显示了在从其运行循环中删除输入源时用于注销输入源的例程。")]),t._v(" "),s("p",[t._v("清单 3-8 使用应用程序委托注册和删除输入源")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("registerSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sourceInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sourcesToPing addObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sourceInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("removeSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sourceInfo\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id    objToRemove "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("RunLoopContext"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" context "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" sourcesToPing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("context isEqual"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("sourceInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            objToRemove "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("objToRemove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("sourcesToPing removeObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("objToRemove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("调用前面清单中的方法的回调函数如清单 3-4 和清单 3-6 所示。")])]),t._v(" "),s("h4",{attrs:{id:"向输入源发送信号"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#向输入源发送信号"}},[t._v("#")]),t._v(" 向输入源发送信号")]),t._v(" "),s("p",[t._v("在将其数据传递给输入源之后，客户机必须向源发出信号并唤醒其运行循环。向源发出信号让运行循环知道源已经准备好进行处理。而且因为在信号发生时线程可能处于休眠状态，所以您应该总是显式地唤醒运行循环。如果不这样做，可能会导致处理输入源的延迟。")]),t._v(" "),s("p",[t._v("清单 3-9 显示了 "),s("code",[t._v("RunLoopSource")]),t._v(" 对象的 "),s("code",[t._v("fireCommandsOnRunLoop")]),t._v(" 方法。当客户机准备好让源处理它们添加到缓冲区中的命令时，就会调用此方法。")]),t._v(" "),s("p",[t._v("清单 3-9 唤醒 Run Loop")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("fireCommandsOnRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFRunLoopRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("runloop\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopSourceSignal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runLoopSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopWakeUp")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runloop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),s("p",[t._v("永远不要试图通过发送自定义输入源来处理 "),s("code",[t._v("SIGHUP")]),t._v(" 或其他类型的进程级信号。唤醒运行循环的核心基础函数不是信号安全的，不应该在应用程序的信号处理程序例程中使用。有关信号处理程序例程的更多信息，请参阅 "),s("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/sigaction.2.html#//apple_ref/doc/man/2/sigaction",target:"_blank",rel:"noopener noreferrer"}},[t._v("sigaction 手册页"),s("OutboundLink")],1),t._v("。")])]),t._v(" "),s("h3",{attrs:{id:"配置定时器源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置定时器源"}},[t._v("#")]),t._v(" 配置定时器源")]),t._v(" "),s("p",[t._v("要创建一个计时器源，您所要做的就是创建一个计时器对象并在运行循环中调度它。在 "),s("code",[t._v("Cocoa")]),t._v(" 中，使用 "),s("code",[t._v("NSTimer")]),t._v(" 类创建新的计时器对象，在 "),s("code",[t._v("Core Foundation")]),t._v(" 中使用 "),s("code",[t._v("CFRunLoopTimerRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型。在内部， "),s("code",[t._v("NSTimer")]),t._v(" 类只是 "),s("code",[t._v("Core Foundation")]),t._v(" 的一个扩展，它提供了一些方便的特性，比如使用相同的方法创建和调度计时器的能力。")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Cocoa")]),t._v(" 中，你可以使用以下任何一个类方法一次性创建和调度一个计时器:")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("scheduledTimerWithTimeInterval:target:selector:userInfo:repeats:")])]),t._v(" "),s("li",[s("code",[t._v("scheduledTimerWithTimeInterval:invocation:repeats:")])])]),t._v(" "),s("p",[t._v("这些方法创建计时器，并以默认模式("),s("code",[t._v("NSDefaultRunLoopMode")]),t._v(")将其添加到当前线程的运行循环中。如果需要，还可以手动调度计时器，方法是创建 "),s("code",[t._v("NSTimer")]),t._v(" 对象，然后使用 "),s("code",[t._v("NSRunLoop")]),t._v(" 的 "),s("code",[t._v("addTimer:forMode:")]),t._v(" 方法将其添加到运行循环中。这两种技术基本上做的是相同的事情，但对计时器配置的控制级别不同。例如，如果您创建计时器并手动将其添加到 "),s("code",[t._v("run loop")]),t._v(" 中，则可以使用默认模式以外的模式来完成此操作。清单 3-10 显示了如何使用这两种技术创建计时器。第一个计时器的初始延迟为 1 秒，但此后每 0.1 秒定时触发一次。第二个计时器在最初的 0.2 秒延迟后开始触发，然后每 0.2 秒触发一次。")]),t._v(" "),s("p",[t._v("清单 3-10 使用 NSTimer 创建和调度计时器")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[t._v("NSRunLoop"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myRunLoop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create and schedule the first timer.")]),t._v("\nNSDate"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" futureDate "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate dateWithTimeIntervalSinceNow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nNSTimer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myTimer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithFireDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("futureDate\n                        interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),t._v("\n                        target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n                        selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDoFireTimer1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        userInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil\n                        repeats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myRunLoop addTimer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myTimer forMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create and schedule the second timer.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSTimer scheduledTimerWithTimeInterval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.2")]),t._v("\n                        target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v("\n                        selector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myDoFireTimer2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        userInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil\n                        repeats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("YES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br")])]),s("p",[t._v("清单 3-11 显示了使用核心基础函数配置计时器所需的代码。虽然这个例子没有在上下文结构中传递任何用户定义的信息，但是您可以使用这个结构来传递计时器所需的任何自定义数据。有关该结构内容的更多信息，请参见 "),s("a",{attrs:{href:"https://developer.apple.com/documentation/corefoundation/cfrunlooptimer-rhk",target:"_blank",rel:"noopener noreferrer"}},[t._v("CFRunLoopTimer 参考"),s("OutboundLink")],1),t._v("中对其的描述。")]),t._v(" "),s("p",[t._v("清单 3-11 使用 "),s("code",[t._v("Core Foundation")]),t._v(" 创建和调度计时器")]),t._v(" "),s("div",{staticClass:"language-c line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[t._v("CFRunLoopRef runLoop "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopGetCurrent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nCFRunLoopTimerContext context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nCFRunLoopTimerRef timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopTimerCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kCFAllocatorDefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                                        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("myCFTimerCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopAddTimer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("runLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFRunLoopCommonModes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("h3",{attrs:{id:"配置基于端口的输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置基于端口的输入源"}},[t._v("#")]),t._v(" 配置基于端口的输入源")]),t._v(" "),s("p",[s("code",[t._v("Cocoa")]),t._v(" 和 "),s("code",[t._v("Core Foundation")]),t._v(" 都提供了用于线程间或进程间通信的基于端口的对象。下面的部分将向您展示如何使用几种不同类型的端口设置端口通信。")]),t._v(" "),s("h4",{attrs:{id:"配置-nsmachport-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-nsmachport-对象"}},[t._v("#")]),t._v(" 配置 NSMachPort 对象")]),t._v(" "),s("p",[t._v("要与 "),s("code",[t._v("NSMachPort")]),t._v(" 对象建立本地连接，需要创建 "),s("code",[t._v("port")]),t._v(" 对象并将其添加到主线程的 "),s("code",[t._v("run loop")]),t._v(" 中。当启动你的二级线程时，你将相同的对象传递给你的线程的入口点函数。次要线程可以使用相同的对象将消息发送回主线程。")]),t._v(" "),s("h5",{attrs:{id:"实现主线程代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现主线程代码"}},[t._v("#")]),t._v(" 实现主线程代码")]),t._v(" "),s("p",[t._v("清单 3-12 显示了启动辅助工作线程的主线程代码。因为 "),s("code",[t._v("Cocoa")]),t._v(" 框架执行了许多配置 "),s("code",[t._v("port")]),t._v(" 和 "),s("code",[t._v("run loop")]),t._v(" 的中间步骤， "),s("code",[t._v("launchThread")]),t._v(" 方法明显比它的核心基础等效方法要短(清单 3-17);然而，两者的行为几乎完全相同。一个区别是，这个方法没有将本地端口的名称发送给工作线程，而是直接发送 "),s("code",[t._v("NSPort")]),t._v(" 对象。")]),t._v(" "),s("p",[t._v("清单 3-12 主线程启动方法")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("launchThread\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMachPort port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// This class handles incoming port messages.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myPort setDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Install the port as an input source on the current run loop.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" addPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myPort forMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Detach the thread. Let the worker release the port.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSThread detachNewThreadSelector"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("@selector")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LaunchThreadWithPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n               toTarget"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MyWorkerClass class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" withObject"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[t._v("为了在你的线程之间建立一个双向通信通道，你可能想让工作线程在签入消息中向你的主线程发送它自己的本地端口。接收签入消息可以让主线程知道在启动第二个线程时一切顺利，并为您提供向该线程发送进一步消息的方法。")]),t._v(" "),s("p",[t._v("清单 3-13 显示了主线程的 "),s("code",[t._v("handlePortMessage:")]),t._v("方法。当数据到达线程自己的本地端口时，将调用此方法。当签入消息到达时，该方法直接从端口消息中检索辅助线程的端口，并保存它以供以后使用。")]),t._v(" "),s("p",[t._v("清单 3-13 处理 Mach 端口消息")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("kCheckinMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle responses from the worker thread.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("handlePortMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSPortMessage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("portMessage\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("unsigned")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("portMessage msgid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" distantPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" kCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Get the worker thread’s communications port.")]),t._v("\n        distantPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("portMessage sendPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retain and save the worker port for later use.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" storeDistantPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("distantPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Handle other messages.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("h5",{attrs:{id:"实现子线程代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现子线程代码"}},[t._v("#")]),t._v(" 实现子线程代码")]),t._v(" "),s("p",[t._v("对于辅助工作线程，必须配置该线程并使用指定的端口将信息传递回主线程。")]),t._v(" "),s("p",[t._v("清单 3-14 显示了设置工作线程的代码。在为线程创建一个自动释放池之后，该方法会创建一个 "),s("code",[t._v("worker")]),t._v(" 对象来驱动线程的执行。 "),s("code",[t._v("worker")]),t._v(" 对象的 "),s("code",[t._v("sendCheckinMessage:")]),t._v(" 方法(如清单 3-15 所示)为 "),s("code",[t._v("worker")]),t._v(" 线程创建了一个本地端口，并将"),s("code",[t._v("checkin")]),t._v("消息发送回主线程。")]),t._v(" "),s("p",[t._v("清单 3-14 使用 Mach 端口启动工作线程")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("LaunchThreadWithPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("inData\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    NSAutoreleasePool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  pool "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSAutoreleasePool alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Set up the connection between this thread and the main thread.")]),t._v("\n    NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" distantPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("inData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    MyWorkerClass"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("  workerObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("workerObj sendCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("distantPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("distantPort release"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Let the run loop process things.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("do")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" runMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode\n                            beforeDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate distantFuture"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("workerObj shouldExit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("workerObj release"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pool release"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br")])]),s("p",[t._v("当使用 "),s("code",[t._v("NSMachPort")]),t._v(" 时，本地线程和远程线程可以使用相同的端口对象进行线程之间的单向通信。换句话说，由一个线程创建的本地端口对象成为另一个线程的远程端口对象。")]),t._v(" "),s("p",[t._v("清单 3-15 显示了第二个线程的"),s("code",[t._v("checkin")]),t._v("例程。此方法为将来的通信设置自己的本地端口，然后将"),s("code",[t._v("checkin")]),t._v("消息发送回主线程。该方法使用在 "),s("code",[t._v("LaunchThreadWithPort:")]),t._v(" 方法中接收到的 "),s("code",[t._v("port")]),t._v(" 对象作为消息的目标。")]),t._v(" "),s("p",[t._v("清单 3-15 使用 Mach 端口发送"),s("code",[t._v("checkin")]),t._v("消息")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Worker thread check-in method")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("sendCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("outPort\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retain and save the remote port for future use.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),t._v(" setRemotePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("outPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create and configure the worker thread port.")]),t._v("\n    NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" myPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMachPort port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("myPort setDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" addPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myPort forMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the check-in message.")]),t._v("\n    NSPortMessage"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" messageObj "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSPortMessage alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" initWithSendPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("outPort\n                                         receivePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("myPort components"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messageObj"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Finish configuring the message and send it immediately.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("messageObj setMsgId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("setMsgid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("kCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("messageObj sendBeforeDate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSDate date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("h4",{attrs:{id:"配置-nsmessageport-对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#配置-nsmessageport-对象"}},[t._v("#")]),t._v(" 配置 NSMessagePort 对象")]),t._v(" "),s("p",[t._v("要与 "),s("code",[t._v("NSMessagePort")]),t._v(" 对象建立本地连接，不能简单地在线程之间传递端口对象。远程消息端口必须按名称获取。要在 "),s("code",[t._v("Cocoa")]),t._v(" 中实现这一点，需要使用特定的名称注册本地端口，然后将该名称传递给远程线程，以便它能够获得用于通信的适当端口对象。清单 3-16 显示了在希望使用消息端口的情况下的端口创建和注册过程。")]),t._v(" "),s("p",[t._v("清单 3-16 注册消息端口")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[t._v("NSPort"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" localPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMessagePort alloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" init"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Configure the object and add it to the current run loop.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("localPort setDelegate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("self")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSRunLoop currentRunLoop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" addPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("localPort forMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("NSDefaultRunLoopMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Register the port using a specific name. The name must be unique.")]),t._v("\nNSString"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" localPortName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSString stringWithFormat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('@"MyPortName"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("NSMessagePortNameServer sharedInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" registerPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("localPort\n                     name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("localPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("h4",{attrs:{id:"在-core-foundation-中配置基于端口的输入源"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#在-core-foundation-中配置基于端口的输入源"}},[t._v("#")]),t._v(" 在 Core Foundation 中配置基于端口的输入源")]),t._v(" "),s("p",[t._v("本节展示了如何使用 "),s("code",[t._v("Core Foundation")]),t._v(" 在应用程序的主线程和工作线程之间建立双向通信通道。")]),t._v(" "),s("p",[t._v("清单 3-17 显示了应用程序主线程用来启动工作线程的代码。该代码所做的第一件事是设置一个 "),s("code",[t._v("CFMessagePortRef")]),t._v(" "),s("code",[t._v("opaque")]),t._v(" 类型来侦听来自工作线程的消息。工作线程需要端口的名称来建立连接，这样字符串值就会被传递给工作线程的入口函数。端口名在当前用户上下文中应该是唯一的;否则，您可能会遇到冲突。")]),t._v(" "),s("p",[t._v("清单 3-17 将 "),s("code",[t._v("Core Foundation")]),t._v(" 消息端口附加到新线程")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("kThreadStackSize")]),t._v("        "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4096")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")])])]),t._v("\n\nOSStatus "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MySpawnThread")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a local port for receiving responses.")]),t._v("\n    CFStringRef myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFMessagePortRef myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFRunLoopSourceRef rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFMessagePortContext context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Boolean shouldFreeInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a string with the port name.")]),t._v("\n    myPortName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFStringCreateWithFormat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFSTR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.myapp.MainThread"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the port.")]),t._v("\n    myPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("MainThreadResponseHandler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("shouldFreeInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The port was successfully created.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Now create a run loop source for it.")]),t._v("\n        rlSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateRunLoopSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the source to the current run loop.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopAddSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopGetCurrent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFRunLoopDefaultMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Once installed, these can be freed.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the thread and continue processing.")]),t._v("\n    MPTaskID        taskID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MPCreateTask")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ServerThreadEntryPoint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    kThreadStackSize"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("taskID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br")])]),s("p",[t._v("安装了端口并启动了线程后，主线程可以在等待线程"),s("code",[t._v("checkin")]),t._v("的同时继续正常执行。当"),s("code",[t._v("checkin")]),t._v("消息到达时，它被分配给主线程的 "),s("code",[t._v("MainThreadResponseHandler")]),t._v(" 函数，如清单 3-18 所示。这个函数提取 "),s("code",[t._v("worker")]),t._v(" 线程的端口名，并为将来的通信创建一个管道。")]),t._v(" "),s("p",[t._v("清单 3-18 接收 "),s("code",[t._v("checkin")]),t._v(" 消息")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[t._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[t._v("define")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token macro-name"}},[t._v("kCheckinMessage")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token expression"}},[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")])])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Main thread port message handler")]),t._v("\nCFDataRef "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MainThreadResponseHandler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFMessagePortRef local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    SInt32 msgid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    CFDataRef data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("msgid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" kCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        CFMessagePortRef messagePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        CFStringRef threadPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        CFIndex bufferLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFDataGetLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        UInt8"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFAllocatorAllocate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bufferLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFDataGetBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRangeMake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bufferLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        threadPortName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFStringCreateWithBytes")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bufferLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFStringEncodingASCII"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" FALSE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// You must obtain a remote message port by name.")]),t._v("\n        messagePort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateRemote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFStringRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("threadPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messagePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Retain and save the thread’s comm port for future reference.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("AddPortToListOfActiveThreads")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messagePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Since the port is retained by the previous function, release")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// it here.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("messagePort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Clean up.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("threadPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFAllocatorDeallocate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Process other messages.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br")])]),s("p",[t._v("配置好主线程后，剩下的事情就是让新创建的工作线程创建自己的端口并"),s("code",[t._v("checkin")]),t._v("。清单 3-19 显示了工作线程的入口点函数。该函数提取主线程的端口名，并使用它创建一个返回主线程的远程连接。然后，该函数为自己创建一个本地端口，在线程的运行循环中安装该端口，并向主线程发送包含本地端口名称的"),s("code",[t._v("checkin")]),t._v("消息。")]),t._v(" "),s("p",[t._v("清单 3-19 设置线程结构")]),t._v(" "),s("div",{staticClass:"language-objc line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-objc"}},[s("code",[t._v("OSStatus "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("ServerThreadEntryPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create the remote port to the main thread.")]),t._v("\n    CFMessagePortRef mainThreadPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFStringRef portName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("CFStringRef"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("param"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    mainThreadPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateRemote")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" portName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Free the string that was passed in param.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("portName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Create a port for the worker thread.")]),t._v("\n    CFStringRef myPortName "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFStringCreateWithFormat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFSTR")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.MyApp.Thread-%d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MPCurrentTaskID")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Store the port in this thread’s context info for later reference.")]),t._v("\n    CFMessagePortContext context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mainThreadPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Boolean shouldFreeInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    Boolean shouldAbort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TRUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    CFMessagePortRef myPort "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateLocal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("ProcessClientRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("shouldFreeInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("shouldFreeInfo"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Couldn't create a local port, so kill the thread.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MPExit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    CFRunLoopSourceRef rlSource "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortCreateRunLoopSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Couldn't create a local port, so kill the thread.")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("MPExit")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Add the source to the current run loop.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopAddSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopGetCurrent")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCFRunLoopDefaultMode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Once installed, these can be freed.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rlSource"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Package up the port name and send the check-in message.")]),t._v("\n    CFDataRef returnData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nil"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFDataRef outData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    CFIndex stringLength "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFStringGetLength")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    UInt8"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" buffer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFAllocatorAllocate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stringLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFStringGetBytes")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("myPortName"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRangeMake")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("stringLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                kCFStringEncodingASCII"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                FALSE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                stringLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    outData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFDataCreate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stringLength"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFMessagePortSendRequest")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mainThreadPort"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" kCheckinMessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" outData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Clean up thread data structures.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRelease")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("outData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFAllocatorDeallocate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Enter the run loop.")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("CFRunLoopRun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br"),s("span",{staticClass:"line-number"},[t._v("39")]),s("br"),s("span",{staticClass:"line-number"},[t._v("40")]),s("br"),s("span",{staticClass:"line-number"},[t._v("41")]),s("br"),s("span",{staticClass:"line-number"},[t._v("42")]),s("br"),s("span",{staticClass:"line-number"},[t._v("43")]),s("br"),s("span",{staticClass:"line-number"},[t._v("44")]),s("br"),s("span",{staticClass:"line-number"},[t._v("45")]),s("br"),s("span",{staticClass:"line-number"},[t._v("46")]),s("br"),s("span",{staticClass:"line-number"},[t._v("47")]),s("br"),s("span",{staticClass:"line-number"},[t._v("48")]),s("br"),s("span",{staticClass:"line-number"},[t._v("49")]),s("br"),s("span",{staticClass:"line-number"},[t._v("50")]),s("br"),s("span",{staticClass:"line-number"},[t._v("51")]),s("br"),s("span",{staticClass:"line-number"},[t._v("52")]),s("br"),s("span",{staticClass:"line-number"},[t._v("53")]),s("br"),s("span",{staticClass:"line-number"},[t._v("54")]),s("br"),s("span",{staticClass:"line-number"},[t._v("55")]),s("br"),s("span",{staticClass:"line-number"},[t._v("56")]),s("br"),s("span",{staticClass:"line-number"},[t._v("57")]),s("br"),s("span",{staticClass:"line-number"},[t._v("58")]),s("br"),s("span",{staticClass:"line-number"},[t._v("59")]),s("br"),s("span",{staticClass:"line-number"},[t._v("60")]),s("br"),s("span",{staticClass:"line-number"},[t._v("61")]),s("br"),s("span",{staticClass:"line-number"},[t._v("62")]),s("br"),s("span",{staticClass:"line-number"},[t._v("63")]),s("br"),s("span",{staticClass:"line-number"},[t._v("64")]),s("br"),s("span",{staticClass:"line-number"},[t._v("65")]),s("br"),s("span",{staticClass:"line-number"},[t._v("66")]),s("br"),s("span",{staticClass:"line-number"},[t._v("67")]),s("br"),s("span",{staticClass:"line-number"},[t._v("68")]),s("br"),s("span",{staticClass:"line-number"},[t._v("69")]),s("br"),s("span",{staticClass:"line-number"},[t._v("70")]),s("br"),s("span",{staticClass:"line-number"},[t._v("71")]),s("br")])]),s("p",[t._v("一旦它进入运行循环，所有未来发送到线程端口的事件都将由 "),s("code",[t._v("ProcessClientRequest")]),t._v(" 函数处理。该函数的实现取决于线程所做的工作类型，这里没有显示。")]),t._v(" "),s("hr"),t._v(" "),s("p",[t._v("引用: "),s("a",{attrs:{href:"https://developer.apple.com/library/archive/documentation/Cocoa/Conceptual/Multithreading/RunLoopManagement/RunLoopManagement.html#//apple_ref/doc/uid/10000057i-CH16-SW1",target:"_blank",rel:"noopener noreferrer"}},[t._v("Run Loops"),s("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);